{"version":3,"file":"share-buttons.service.js","sourceRoot":"","sources":["../inlined/service/share-buttons.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Jsonp } from \"@angular/http\";\nimport { Observable } from \"rxjs/Observable\";\n\nimport \"rxjs/add/operator/map\";\nimport \"rxjs/add/observable/empty\";\nimport \"rxjs/add/operator/catch\";\n\nimport { ShareProvider } from \"../helpers/share-provider.enum\";\nimport { ShareButtonsInterface } from \"./share-buttons.interface\";\nimport { ShareLinks } from \"./share-links.functions\";\n\n\nexport class ShareButtonsService implements ShareButtonsInterface {\n\n    /** Optional parameters */\n    windowWidth: number = 500;\n    windowHeight: number = 400;\n\n    /** Site Twitter Account: Add Via @TwitterAccount to the tweet  */\n    twitterAccount: string;\n\n    constructor(private http: Http, private jsonp: Jsonp) {\n    }\n\n\n    share(type, args) {\n        switch (type) {\n            case ShareProvider.FACEBOOK:\n                return ShareLinks.fbShare(args);\n            case ShareProvider.TWITTER:\n                return ShareLinks.twitterShare(args);\n            case ShareProvider.LINKEDIN:\n                return ShareLinks.linkedInShare(args);\n            case ShareProvider.REDDIT:\n                return ShareLinks.redditShare(args);\n            case ShareProvider.TUMBLR:\n                return ShareLinks.tumblrShare(args);\n            case ShareProvider.STUMBLEUPON:\n                return ShareLinks.stumbleShare(args);\n            case ShareProvider.GOOGLEPLUS:\n                return ShareLinks.gPlusShare(args);\n            case ShareProvider.PINTEREST:\n                return ShareLinks.pinShare(args);\n            default:\n                return '';\n        }\n    }\n\n\n    /** Share Counts */\n\n    count(type, url): Observable<number> {\n        switch (type) {\n            case ShareProvider.FACEBOOK:\n                return this.fbCount(url);\n            case ShareProvider.LINKEDIN:\n                return this.linkedInCount(url);\n            case ShareProvider.REDDIT:\n                return this.redditCount(url);\n            case ShareProvider.TUMBLR:\n                return this.tumblrCount(url);\n            case ShareProvider.GOOGLEPLUS:\n                return this.gPlusCount(url);\n            case ShareProvider.PINTEREST:\n                return this.pinCount(url);\n            default:\n                return Observable.empty<number>();\n        }\n    }\n\n    private fbCount(url: string): Observable<number> {\n        return this.fetch('https://graph.facebook.com/?id=' + url)\n            .map((data: any) => {\n                data = data.json();\n                if (data.hasOwnProperty('share') && data.share.hasOwnProperty('share_count')) {\n                    return data.share.share_count;\n                }\n                return 0;\n            });\n    }\n\n    private linkedInCount(url: string): Observable<number> {\n        return this.fetchJsonp('https://www.linkedin.com/countserv/count/share?url=' + url)\n            .map((data: any) => {\n                data = data.json();\n                return data.count | 0;\n            });\n    }\n\n    private redditCount(url: string): Observable<number> {\n        return this.fetch('https://buttons.reddit.com/button_info.json?url=' + url)\n            .map((data: any) => {\n                data = data.json();\n                if (data.hasOwnProperty('data') && data.data.hasOwnProperty('children')) {\n                    if (data.data.children.length) return data.data.children[0].data.score;\n                }\n                return 0;\n            });\n    }\n\n    private gPlusCount(url: string): Observable<number> {\n        let body = gplusCountBody(url);\n        return this.http.post('https://clients6.google.com/rpc?key=AIzaSyCKSbrvQasunBoV16zDH9R33D88CeLr9gQ', body)\n            .map((data: any) => {\n                data = data.json();\n                if (data[0] && data[0].hasOwnProperty('result')) {\n                    return data[0].result.metadata.globalCounts.count;\n                }\n                return 0;\n            });\n    }\n\n    private pinCount(url: string): Observable<number> {\n        return this.fetch('https://api.pinterest.com/v1/urls/count.json?callback=receiveCount&url=' + url)\n            .map((data: any) => {\n                data = data.text();\n                var result = JSON.parse(data.replace(/^receiveCount\\((.*)\\)/, '$1'));\n                return result.count | 0;\n            });\n    }\n\n    private tumblrCount(url: string): Observable<number> {\n        return this.fetchJsonp('https://api.tumblr.com/v2/share/stats?url=' + url)\n            .map((data: any) => {\n                data = data.json();\n                if (data.hasOwnProperty('response') && data.response.hasOwnProperty('note_count')) {\n                    return data.response.note_count;\n                }\n                return 0;\n            });\n    }\n\n    private fetch(url) {\n        return this.http.get(url)\n            .catch((err) => {\n                console.warn('[ShareService HTTP]: ', err);\n                return Observable.empty();\n            });\n    }\n\n    private fetchJsonp(url) {\n        return this.jsonp.request(url + '&format=jsonp&callback=JSONP_CALLBACK')\n            .catch((err) => {\n                console.warn('[ShareService JSONP]: ', err);\n                return Observable.empty();\n            });\n    }\n\n    windowAttr() {\n        return 'width=' + this.windowWidth + ', height=' + this.windowHeight;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: Http, },\n{type: Jsonp, },\n];\n}\n\n\n/** Prepare gPlus count request body   */\nexport const gplusCountBody = (url) => {\n    return [{\n        \"method\": \"pos.plusones.get\",\n        \"id\": \"p\",\n        \"params\": { \"nolog\": true, \"id\": url, \"source\": \"widget\", \"userId\": \"@viewer\", \"groupId\": \"@self\" },\n        \"jsonrpc\": \"2.0\",\n        \"key\": \"p\",\n        \"apiVersion\": \"v1\"\n    }];\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}