{"version":3,"file":"share-button.component.js","sourceRoot":"","sources":["../../inlined/components/share-button/share-button.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    AfterViewInit,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer,\n    ViewChild,\n    ElementRef,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { ShareButton, ShareArgs } from \"../../helpers/share-buttons.class\";\nimport { ShareButtonsService } from \"../../service/share-buttons.service\";\nimport { WindowService } from \"../../service/window.service\";\nimport { ShareProvider } from \"../../helpers/share-provider.enum\";\n\ndeclare var global: any; //To make AoT compiler (ngc) happy\n\n\nexport class ShareButtonComponent implements AfterViewInit {\n\n    /** Share Args */\n     url: string;\n     title: string;\n     description: string;\n     image: string;\n     tags: string;\n\n    /** Button type e.g. fb, twitter, reddit...etc */\n     button: ShareButton;\n    /** Show count, disabled by default */\n     count: boolean = false;\n    /** Output button count to calculate total share counts */\n     countOuter = new EventEmitter<number>();\n\n    /** Output pop up closed*/\n     popUpClosed = new EventEmitter<ShareProvider>();\n\n     btn: ElementRef;\n\n    private window: Window;\n\n    constructor(private sbService: ShareButtonsService,\n        private renderer: Renderer,\n        private elementRef: ElementRef,\n        window: WindowService) {\n        this.window = window.nativeWindow;\n    }\n\n    ngAfterViewInit() {\n        /** If URL is not presented then set the current URL    */\n        if (this.url) {\n            /** If URL is presented check if it is a valid URL */\n            let r = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n            if (!r.test(this.url)) {\n                console.warn('ShareButtons: Invalid URL, switching to window.location.href');\n                /** Use encodeURIComponent to get the full URL including after the hash */\n                this.url = this.window ? \n                encodeURIComponent(this.window.location.href)\n                : typeof global != 'undefined' ? (<any>global).url : '';\n            }\n        }\n        else {\n            /** This supposed to fix window when undefined on Universal */\n            this.url = this.window ? \n            encodeURIComponent(this.window.location.href) : \n            typeof global != 'undefined' ? (<any>global).url : '';\n        }\n\n        /** Set button template */\n        this.renderer.setElementProperty(this.btn.nativeElement, 'innerHTML', this.button.template);\n\n        /** Set buttons classes */\n        let classes = this.button.classes.match(/\\S+/g) || [];\n        classes.map((btnClass) => this.renderer.setElementClass(this.btn.nativeElement, btnClass, true));\n\n        /** Add share count if enabled */\n        if (this.count) {\n            this.sbService.count(this.button.provider, this.url)\n                .subscribe(shareCount => {\n                    if (shareCount) {\n                        let counter = this.renderer.createElement(this.elementRef.nativeElement, 'span');\n                        this.renderer.setElementClass(counter, 'sb-button-count', true);\n                        this.renderer.setElementProperty(counter, 'textContent', this.nFormatter(shareCount, 1));\n                        this.countOuter.emit(shareCount);\n                    }\n                });\n        }\n    }\n\n\n    /** Open share window */\n    share() {\n        let shareArgs = new ShareArgs(this.url, this.title, this.description, this.image, this.tags);\n\n        let popUp = this.window.open(this.sbService.share(this.button.provider, shareArgs), 'newwindow', this.sbService.windowAttr());\n\n        let pollTimer = this.window.setInterval(() => {\n            if (popUp.closed !== false) { // !== is required for compatibility with Opera\n                this.window.clearInterval(pollTimer);\n                this.popUpClosed.emit(this.button.provider);\n            }\n        }, 200);\n    }\n\n\n    nFormatter(num, digits) {\n        var si = [\n            { value: 1E18, symbol: \"E\" },\n            { value: 1E15, symbol: \"P\" },\n            { value: 1E12, symbol: \"T\" },\n            { value: 1E9, symbol: \"G\" },\n            { value: 1E6, symbol: \"M\" },\n            { value: 1E3, symbol: \"K\" }\n        ], rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/, i;\n        for (i = 0; i < si.length; i++) {\n            if (num >= si[i].value) {\n                return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n            }\n        }\n        return num.toFixed(digits).replace(rx, \"$1\");\n    }\n\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'share-button',\n    template: '<button  #btn (click)=\"share()\"></button>',\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: ShareButtonsService, },\n{type: Renderer, },\n{type: ElementRef, },\n{type: WindowService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'url': [{ type: Input },],\n'title': [{ type: Input },],\n'description': [{ type: Input },],\n'image': [{ type: Input },],\n'tags': [{ type: Input },],\n'button': [{ type: Input },],\n'count': [{ type: Input },],\n'countOuter': [{ type: Output },],\n'popUpClosed': [{ type: Output },],\n'btn': [{ type: ViewChild, args: ['btn', ] },],\n};\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}